apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
    app.quarkus.io/build-timestamp: 2020-12-03 - 16:42:52 +0000
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: quarkus-kind-mp-showcase
    app.kubernetes.io/version: "0.8"
  name: quarkus-kind-mp-showcase
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quarkus-kind-mp-showcase
      app.kubernetes.io/version: "0.8"
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        app.quarkus.io/build-timestamp: 2020-12-03 - 16:42:52 +0000
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: quarkus-kind-mp-showcase
        app.kubernetes.io/version: "0.8"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: unexist/quarkus-kind-mp-showcase:0.8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: quarkus-kind-mp-showcase
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
